/************************************************************************************************
 * This code was automatically generated by Digital Twin Code Generator tool 0.6.1.
 * Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
 *
 * Generated Date: 2019年9月2日
 ***********************************************************************************************/

#ifndef BATTERY_INTERFACE_H
#define BATTERY_INTERFACE_H

#include <stdio.h>
#include <stdlib.h>
#include <stdbool.h>
#include <string.h>
#include "digitaltwin_interface_client.h"
#include "azure_c_shared_utility/xlogging.h"
#include "azure_c_shared_utility/threadapi.h"

#include "digitaltwin_client_helper.h"
#include "digitaltwin_serializer.h"
#include "parson.h"
#include "../ReButton_impl.h"

#ifdef __cplusplus
extern "C"
{
#endif

typedef enum BATTERY_TELEMETRY_TAG
{
    Battery_BATTERYVOLTAGE_TELEMETRY
} BATTERY_TELEMETRY;

// DigitalTwin interface name from service perspective.
static const char BatteryInterfaceId[] = "urn:seeedkk:Interface:Battery:1";
static const char BatteryInterfaceInstanceName[] = "Battery";

// Telemetry names for this interface.

static const char BatteryInterface_BatteryVoltageTelemetry[] = "batteryVoltage";

// Property names for this interface.

// Command names for this interface

// Methods
DIGITALTWIN_INTERFACE_CLIENT_HANDLE BatteryInterface_Create();

void BatteryInterface_Close(DIGITALTWIN_INTERFACE_CLIENT_HANDLE digitalTwinInterfaceClientHandle);

DIGITALTWIN_CLIENT_RESULT BatteryInterface_Telemetry_SendBatteryVoltage();

DIGITALTWIN_CLIENT_RESULT BatteryInterface_Telemetry_SendAll();

#ifdef __cplusplus
}
#endif

#endif  // BATTERY_INTERFACE_H
